package Main;

import java.io.File;
import java.io.IOException;

import com.amazonaws.AmazonClientException;
import com.amazonaws.AmazonServiceException;
import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.PropertiesCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.Bucket;
import com.amazonaws.services.s3.model.PutObjectRequest;
import com.amazonaws.services.sqs.AmazonSQS;
import com.amazonaws.services.sqs.AmazonSQSClient;
import com.amazonaws.services.sqs.model.CreateQueueRequest;

public class Local {
	private PropertiesCredentials Pc;
	private AWSCredentials Credentials;
	private AmazonSQS AmazonSqs;
	private AmazonS3 S3;
	private String LocalToManagerUrl;
	private String ManagerToWorkerUrl;
	private String WorkerToManagerUrl;

	public Local() {
		try {
			Pc = new PropertiesCredentials(
					Local.class
							.getResourceAsStream("../AwsCredentials.properties"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		Credentials = Pc;
		AmazonSqs = new AmazonSQSClient(Pc);
		S3 = new AmazonS3Client(Credentials);

	}

	public String userData() {
		String s;
		s = "#!/bin/bash\n+";

		// set -e -x
		// export DEBIAN_FRONTEND=noninteractive
		// apt-get update && apt-get upgrade -y
		// tasksel install lamp-server
		// echo "Please remember to set the MySQL root password!"";
		return s;
	}

	public void createBucketAndUploadFile() {
		String directoryName = "Distributed";

		String bucketName = Credentials.getAWSAccessKeyId()
				+ "."
				+ directoryName.replace('\\', '_').replace('/', '_')
						.replace(':', '_');
		bucketName = bucketName.toLowerCase();
		String key = "distributed";

		System.out.println("===========================================");
		System.out.println("Getting Started with Amazon S3");
		System.out.println("===========================================\n");

		try {
			System.out.println("Creating bucket " + bucketName + "\n");
			S3.createBucket(bucketName);

			/*
			 * List the buckets in your account
			 */
			System.out.println("Listing buckets");
			for (Bucket bucket : S3.listBuckets()) {
				System.out.println(" - " + bucket.getName());
			}
			System.out.println();

			System.out.println("Uploading a new object to S3 from a file\n");
			File file = new File("TxtImage/imageTxt.txt");
			S3.putObject(new PutObjectRequest(bucketName, key, file));

			System.out.println();

		} catch (AmazonServiceException ase) {
			System.out
					.println("Caught an AmazonServiceException, which means your request made it "
							+ "to Amazon S3, but was rejected with an error response for some reason.");
			System.out.println("Error Message:    " + ase.getMessage());
			System.out.println("HTTP Status Code: " + ase.getStatusCode());
			System.out.println("AWS Error Code:   " + ase.getErrorCode());
			System.out.println("Error Type:       " + ase.getErrorType());
			System.out.println("Request ID:       " + ase.getRequestId());
		} catch (AmazonClientException ace) {
			System.out
					.println("Caught an AmazonClientException, which means the client encountered "
							+ "a serious internal problem while trying to communicate with S3, "
							+ "such as not being able to access the network.");
			System.out.println("Error Message: " + ace.getMessage());
		}

	}

	public void createQueues() {
		System.out.println("Create Queues");
		CreateQueueRequest LocalToManagerQueueRequest = new CreateQueueRequest()
				.withQueueName("LocalToManagerQueue");
		LocalToManagerUrl = AmazonSqs.createQueue(LocalToManagerQueueRequest)
				.getQueueUrl();

		CreateQueueRequest ManagerToWorkerQueueRequest = new CreateQueueRequest()
				.withQueueName("ManagerToWorkerQueue");
		ManagerToWorkerUrl = AmazonSqs.createQueue(ManagerToWorkerQueueRequest)
				.getQueueUrl();

		CreateQueueRequest WorkerToManagerQueueRequest = new CreateQueueRequest()
				.withQueueName("WorkerToManager");
		WorkerToManagerUrl = AmazonSqs.createQueue(WorkerToManagerQueueRequest)
				.getQueueUrl();
		
		int k = 3;

	}

}
