import java.io.IOException;
import java.util.List;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.PropertiesCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.sqs.AmazonSQS;
import com.amazonaws.services.sqs.AmazonSQSClient;
import com.amazonaws.services.sqs.model.Message;
import com.amazonaws.services.sqs.model.ReceiveMessageRequest;

public class Worker {
	private PropertiesCredentials Pc;
	private AWSCredentials Credentials;
	private AmazonS3 S3;
	private AmazonSQS AmazonSQS;
	private int numOfJobs;

	public Worker() {
		try {
			Pc = new PropertiesCredentials(
					Worker.class
							.getResourceAsStream("AwsCredentials.properties"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		Credentials = Pc;
		S3 = new AmazonS3Client(Credentials);
		AmazonSQS = new AmazonSQSClient(Pc);
		numOfJobs = -1;

	}

	public int getNumOfJobs() {
		if (numOfJobs == -1) {
			ReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest(
					ConstantProvider.MANAGER_TO_WORKER_QUEUE);
			List<Message> messages = AmazonSQS.receiveMessage(
					receiveMessageRequest).getMessages();
			numOfJobs = Integer.parseInt(messages.get(0).getBody());
		}
		return numOfJobs;
	}

	private String[] getUrlsToWorkOn() {
		String[] ans = {};
		String allUrlInRow = "";
		ReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest(
				ConstantProvider.MESSEAGES_QUEUE);
		receiveMessageRequest.setVisibilityTimeout(5);
		int numOfMesseges = AmazonSQS.receiveMessage(receiveMessageRequest)
				.getMessages().size();
		for (int i = 0; i < numOfJobs; i++) {
			allUrlInRow = allUrlInRow
					+ AmazonSQS.receiveMessage(receiveMessageRequest)
							.getMessages().get(0) + " ";
			System.out.println("Deleting messege from queue : "
					+ AmazonSQS.receiveMessage(receiveMessageRequest)
							.getMessages().get(0));
			String messageRecieptHandle = AmazonSQS
					.receiveMessage(receiveMessageRequest).getMessages().get(0)
					.getReceiptHandle();
			AmazonSQS.deleteMessage(new DeleteMessageRequest(
					ConstantProvider.LOCAL_TO_MANAGER_QUEUE,
					messageRecieptHandle));
		}

		return ans;
	}

	public static void main(String args[]) throws Exception {
		Worker worker = new Worker();
		int numOfJobs = worker.getNumOfJobs();
		String urls[] = worker.getUrlsToWorkOn();

	}

}
